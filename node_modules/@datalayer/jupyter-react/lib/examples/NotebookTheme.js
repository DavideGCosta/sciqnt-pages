import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import { useCallback, useEffect, useState } from 'react';
import { createRoot } from 'react-dom/client';
import { Text, ToggleSwitch, theme as primerTheme } from '@primer/react';
import Jupyter from '../jupyter/Jupyter';
import { jupyterTheme } from '../jupyter/theme';
import Notebook from '../components/notebook/Notebook';
import NotebookToolbar from './toolbars/NotebookToolbar';
import CellSidebar from '../components/notebook/cell/sidebar/CellSidebar';
import nbformat from './notebooks/NotebookExample1.ipynb.json';
const NotebookTheme = () => {
    const [theme, setTheme] = useState(jupyterTheme);
    const [isOn, setIsOn] = useState(false);
    const onClick = useCallback(() => {
        setIsOn(!isOn);
    }, [isOn]);
    useEffect(() => {
        if (isOn) {
            setTheme(primerTheme);
        }
        else {
            setTheme(jupyterTheme);
        }
    }, [isOn]);
    const handleSwitchChange = useCallback((on) => {
        setIsOn(on);
    }, []);
    return (_jsx(_Fragment, { children: _jsxs(Jupyter, { theme: theme, children: [_jsx(Text, { fontSize: 2, fontWeight: "bold", id: "switch-label", display: "block", mb: 1, children: "Primer Theme" }), _jsx(ToggleSwitch, { size: "small", onClick: onClick, onChange: handleSwitchChange, checked: isOn, statusLabelPosition: "end", "aria-labelledby": "switch-label" }), _jsx(Notebook, { nbformat: nbformat, uid: "notebook-model-uid", height: "calc(100vh - 2.6rem)" // (Height - Toolbar Height).
                    , cellSidebarMargin: 120, CellSidebar: CellSidebar, Toolbar: NotebookToolbar })] }) }));
};
const div = document.createElement('div');
document.body.appendChild(div);
const root = createRoot(div);
root.render(_jsx(NotebookTheme, {}));
//# sourceMappingURL=NotebookTheme.js.map