import { jsxs as _jsxs, jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import { createRoot } from 'react-dom/client';
import { useDispatch } from 'react-redux';
import { Box, Button } from '@primer/react';
import Jupyter from '../jupyter/Jupyter';
import Notebook from '../components/notebook/Notebook';
import CellSidebar from '../components/notebook/cell/sidebar/CellSidebar';
import NotebookToolbar from './toolbars/NotebookToolbar';
import { createReduxEpicStore, createInjectableStore, } from '../state/redux/Store';
import { exampleReducer, selectFoo, exampleActions, } from './state/ExampleReduxState';
import nbformat from './notebooks/NotebookExample1.ipynb.json';
const store = createReduxEpicStore();
const injectableStore = createInjectableStore(store);
injectableStore.inject('init', exampleReducer);
const FooDisplay = () => {
    const foo = selectFoo();
    return _jsxs(Box, { m: 3, children: ["Foo date: ", foo ? foo.toISOString() : ''] });
};
const FooAction = () => {
    const dispatch = useDispatch();
    return (_jsx(Box, { m: 3, children: _jsx(Button, { onClick: () => dispatch(exampleActions.updateFoo(new Date())), children: "Update the current date" }) }));
};
const NotebookInjectableReduxStore = (props) => {
    const { injectableStore } = props;
    return (_jsx(_Fragment, { children: _jsxs(Jupyter, { injectableStore: injectableStore, children: [_jsx(FooDisplay, {}), _jsx(FooAction, {}), _jsx(Notebook, { nbformat: nbformat, uid: "notebook-uid-1", height: "calc(100vh - 2.6rem)" // (Height - Toolbar Height).
                    , cellSidebarMargin: 120, CellSidebar: CellSidebar, Toolbar: NotebookToolbar })] }) }));
};
const div = document.createElement('div');
document.body.appendChild(div);
const root = createRoot(div);
root.render(_jsx(NotebookInjectableReduxStore, { injectableStore: injectableStore }));
//# sourceMappingURL=NotebookInjectableReduxStore.js.map