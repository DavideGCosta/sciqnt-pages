import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import { useState } from 'react';
import { createRoot } from 'react-dom/client';
import { Box, Button, ButtonGroup } from '@primer/react';
import Jupyter from '../jupyter/Jupyter';
import { useJupyter } from '../jupyter/JupyterContext';
import Notebook from '../components/notebook/Notebook';
import CellSidebar from '../components/notebook/cell/sidebar/CellSidebar';
// import { selectNotebookModel } from '../components/notebook/NotebookState';
import nbformat1 from './notebooks/NotebookExample1.ipynb.json';
import nbformat2 from './notebooks/NotebookExample2.ipynb.json';
const NOTEBOOK_UID = 'notebook-model-change-id';
const NotebookNbFormatChange = () => {
    const { injectableStore } = useJupyter();
    const [nbformat, setNbformat] = useState(nbformat1);
    //  const notebookModel = selectNotebookModel(NOTEBOOK_UID);
    //  console.log('Notebook Model', notebookModel?.model);
    //  console.log('Notebook Model NbFormat', notebookModel?.model?.toJSON() as INotebookContent);
    const changeModel = () => {
        console.log('Notebook NbFormat from store', injectableStore.getState().notebook.notebooks
            .get(NOTEBOOK_UID)
            ?.model?.toJSON());
        nbformat === nbformat1 ? setNbformat(nbformat2) : setNbformat(nbformat1);
    };
    return (_jsxs(_Fragment, { children: [_jsx(Box, { display: "flex", children: _jsx(ButtonGroup, { children: _jsx(Button, { variant: "default", size: "small", onClick: changeModel, children: "Change Model" }) }) }), _jsx(Notebook, { uid: NOTEBOOK_UID, nbformat: nbformat, height: "700px", CellSidebar: CellSidebar })] }));
};
const div = document.createElement('div');
document.body.appendChild(div);
const root = createRoot(div);
root.render(_jsx(Jupyter, { children: _jsx(NotebookNbFormatChange, {}) }));
//# sourceMappingURL=NotebookNbFormatChange.js.map