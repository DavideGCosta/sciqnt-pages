import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import { useEffect, useState } from 'react';
import { createRoot } from 'react-dom/client';
import { Box, Button } from '@primer/react';
import Jupyter from '../jupyter/Jupyter';
import { useJupyter } from '../jupyter/JupyterContext';
import Kernel from '../jupyter/kernel/Kernel';
import Notebook from '../components/notebook/Notebook';
import CellSidebar from '../components/notebook/cell/sidebar/CellSidebar';
import notebook from './notebooks/NotebookExample1.ipynb.json';
const NotebookUnmount = () => {
    const { kernelManager, serviceManager } = useJupyter();
    const [showNotebook, setShowNotebook] = useState(false);
    const [kernel, setKernel] = useState();
    useEffect(() => {
        if (serviceManager && kernelManager) {
            const kernel = new Kernel({
                kernelManager,
                kernelName: 'defaultKernel',
                kernelSpecName: 'python',
                kernelType: 'notebook',
                kernelspecsManager: serviceManager.kernelspecs,
                sessionManager: serviceManager.sessions,
            });
            setKernel(kernel);
            setShowNotebook(true);
        }
    }, [serviceManager, kernelManager]);
    useEffect(() => {
        if (!showNotebook && kernel) {
            kernel.shutdown();
        }
    }, [showNotebook]);
    const unmount = () => {
        setShowNotebook(false);
    };
    return (_jsx(_Fragment, { children: showNotebook && kernel ? (_jsxs(_Fragment, { children: [_jsx(Box, { display: "flex", children: _jsx(Button, { variant: "default", size: "small", onClick: unmount, children: "Unmount" }) }), _jsx(Notebook, { nbformat: notebook, uid: "notebook-unmount-id", 
                    //                kernel={kernel}
                    height: "700px", CellSidebar: CellSidebar })] })) : (_jsxs(_Fragment, { children: [_jsx(Box, { children: "The Notebook React.js component is not mounted." }), _jsx(Box, { children: "The connections to the Kernel should not happen any more - Check the Network tab in your Browser Devtools." })] })) }));
};
const div = document.createElement('div');
document.body.appendChild(div);
const root = createRoot(div);
root.render(_jsx(Jupyter, { children: _jsx(NotebookUnmount, {}) }));
//# sourceMappingURL=NotebookUnmount.js.map