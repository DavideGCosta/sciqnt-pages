import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import { useState, useEffect } from 'react';
import { createRoot } from 'react-dom/client';
import { Box, IconButton } from '@primer/react';
import { ZapIcon } from '@primer/octicons-react';
import Jupyter from '../jupyter/Jupyter';
import Notebook from '../components/notebook/Notebook';
import { selectNotebookModel } from '../components/notebook/NotebookRedux';
import CellSidebar from '../components/notebook/cell/sidebar/CellSidebar';
import notebook from './notebooks/NotebookExample1.ipynb.json';
const NOTEBOOK_UID = 'notebook-model-uid';
const NotebookExternalContent = () => {
    const [nbformat, setNbFormat] = useState();
    const [updatedNbFormat, setUpdatedNbFormat] = useState();
    const model = selectNotebookModel(NOTEBOOK_UID)?.model;
    useEffect(() => {
        // Set nbformat with any content.
        // This may come from an external storage that you fetch in this react effect.
        setNbFormat(notebook);
    }, []);
    useEffect(() => {
        if (model) {
            model.contentChanged.connect(model => {
                const n = model.toJSON();
                setUpdatedNbFormat(n);
            });
        }
    }, [model]);
    const saveNotebook = () => {
        // Do whatever you want with the updated notebook
        // You may persist it to an external storage that a call to an API.
        alert('Save this notebook: ' + JSON.stringify(updatedNbFormat));
    };
    return nbformat ? (_jsxs(_Fragment, { children: [_jsx(Box, { children: _jsx(IconButton, { variant: "invisible", size: "small", color: "primary", "aria-label": "Save", title: "Save", onClick: e => {
                        e.preventDefault();
                        saveNotebook();
                    }, icon: ZapIcon }) }), _jsx(Notebook, { nbformat: nbformat, uid: NOTEBOOK_UID, height: "calc(100vh - 2.6rem)" // (Height - Toolbar Height).
                , cellSidebarMargin: 120, CellSidebar: CellSidebar })] })) : (_jsx(_Fragment, {}));
};
const div = document.createElement('div');
document.body.appendChild(div);
const root = createRoot(div);
root.render(_jsx(Jupyter, { children: _jsx(NotebookExternalContent, {}) }));
//# sourceMappingURL=NotebookExternalContent.js.map