import { AnyAction } from 'typescript-fsa';
import { ICellState } from '../../components/cell/CellRedux';
import { INotebooksState } from '../../components/notebook/NotebookRedux';
import { ITerminalState } from '../../components/terminal/TerminalRedux';
import { IOutputsState } from '../../components/output/OutputRedux';
export interface IJupyterReactState {
    init: any;
    cell: ICellState;
    output: IOutputsState;
    notebook: INotebooksState;
    terminal: ITerminalState;
}
export declare const initialState: IJupyterReactState;
export declare const epics: import("redux-observable").Epic<AnyAction, AnyAction, any, any>;
export declare const reducers: import("redux").Reducer<import("redux").CombinedState<IJupyterReactState>, import("redux").AnyAction>;
