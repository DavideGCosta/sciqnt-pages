import { jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import { useState, useEffect } from 'react';
import { useDispatch } from 'react-redux';
import { Box } from '@primer/react';
import TerminalAdapter from './TerminalAdapter';
import { terminalActions, terminalReducer } from './TerminalRedux';
import { useJupyter } from './../../jupyter/JupyterContext';
import LuminoBox from '../lumino/LuminoBox';
export const Terminal = (props) => {
    const { height } = props;
    const { injectableStore, serverSettings } = useJupyter();
    const dispatch = useDispatch();
    const [adapter, setAdapter] = useState();
    useEffect(() => {
        injectableStore.inject('terminal', terminalReducer);
        const adapter = new TerminalAdapter({
            serverSettings,
            ...props,
        });
        dispatch(terminalActions.update({ adapter }));
        setAdapter(adapter);
    }, []);
    return adapter ? (_jsx(Box, { sx: {
            '& .lm-BoxPanel': {
                height: `${height} !important`,
            },
        }, children: _jsx(LuminoBox, { children: adapter.panel }) })) : (_jsx(_Fragment, {}));
};
Terminal.defaultProps = {
    height: '100%',
    colorMode: 'dark',
};
export default Terminal;
//# sourceMappingURL=Terminal.js.map