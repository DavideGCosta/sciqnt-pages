/// <reference types="react" />
import { IRenderMime } from '@jupyterlab/rendermime-interfaces';
import { INotebookContent } from '@jupyterlab/nbformat';
import { Kernel } from '../../jupyter/kernel/Kernel';
import { CellSidebarProps } from './cell/sidebar/CellSidebarWidget';
import './Notebook.css';
export type ExternalIPyWidgets = {
    name: string;
    version: string;
};
export type BundledIPyWidgets = ExternalIPyWidgets & {
    module: any;
};
export type INotebookProps = {
    cellMetadataPanel: boolean;
    cellSidebarMargin: number;
    height?: string;
    bundledIPyWidgets?: BundledIPyWidgets[];
    externalIPyWidgets?: ExternalIPyWidgets[];
    kernel?: Kernel;
    maxHeight?: string;
    nbformat?: INotebookContent;
    nbgrader: boolean;
    path?: string;
    readOnly: boolean;
    renderers: IRenderMime.IRendererFactory[];
    uid: string;
    url?: string;
    CellSidebar?: (props: CellSidebarProps) => JSX.Element;
    Toolbar?: (props: any) => JSX.Element;
};
/**
 * This component creates a Notebook as a collection of snippets
 * with sidebars.
 *
 * @param props The notebook properties.
 * @returns A Notebook React.js component.
 */
export declare const Notebook: {
    (props: INotebookProps): import("react/jsx-runtime").JSX.Element;
    defaultProps: Partial<INotebookProps>;
};
export default Notebook;
