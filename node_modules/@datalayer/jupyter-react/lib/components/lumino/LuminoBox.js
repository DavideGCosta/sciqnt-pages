import { jsx as _jsx } from "react/jsx-runtime";
/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import { useRef, useEffect } from 'react';
import { unmountComponentAtNode } from 'react-dom';
import { Widget, BoxPanel } from '@lumino/widgets';
import { Box } from '@primer/react';
export const LuminoBox = (props) => {
    const ref = useRef(null);
    const { id, height, children } = props;
    useEffect(() => {
        if (ref && ref.current) {
            const boxPanel = new BoxPanel();
            boxPanel.spacing = 0;
            boxPanel.addWidget(children);
            try {
                Widget.attach(boxPanel, ref.current);
            }
            catch (e) {
                console.warn('Exception while attaching Lumino widget.', e);
            }
            return () => {
                try {
                    unmountComponentAtNode(boxPanel.node);
                    if (boxPanel.isAttached || boxPanel.node.isConnected) {
                        boxPanel.dispose();
                        Widget.detach(boxPanel);
                    }
                }
                catch (e) {
                    // no-op.
                    //          console.debug('Exception while detaching Lumino widget.', e);
                }
            };
        }
    }, [ref, children]);
    return (_jsx(Box, { style: {
            height,
            minHeight: height,
            width: '100%',
        }, children: _jsx("div", { id: id, ref: ref }) }));
};
LuminoBox.defaultProps = {
    id: 'lumino-box-id',
    height: '100%',
};
export default LuminoBox;
//# sourceMappingURL=LuminoBox.js.map