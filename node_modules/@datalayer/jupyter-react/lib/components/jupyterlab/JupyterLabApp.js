import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import { memo, useState, useEffect, useMemo, useRef } from 'react';
import { Box } from '@primer/react';
import { PageConfig } from '@jupyterlab/coreutils';
import { useJupyter } from '../../jupyter/JupyterContext';
import { JupyterLabAppCorePlugins } from './JupyterLabAppPlugins';
import JupyterLabAppAdapter from './JupyterLabAppAdapter';
import JupyterLabAppCss from './JupyterLabAppCss';
// The webpack public path needs to be set before loading the CSS assets.
globalThis.__webpack_public_path__ =
    PageConfig.getOption('fullStaticUrl') + '/';
window.__webpack_public_path__ =
    PageConfig.getOption('fullStaticUrl') + '/';
export const JupyterLabApp = (props) => {
    const { hostId, position, height, width, headless, theme, onJupyterLab, pluginId, PluginType, onPlugin, } = props;
    const { serviceManager, collaborative } = useJupyter();
    const defaultMimeExtensionPromises = useMemo(() => props.mimeExtensionPromises ??
        JupyterLabAppCorePlugins(collaborative).mimeExtensionPromises, []);
    const defaultExtensionPromises = useMemo(() => props.extensionPromises ??
        JupyterLabAppCorePlugins(collaborative).extensionPromises, []);
    const ref = useRef(null);
    const [_, setAdapter] = useState();
    useEffect(() => {
        if (ref && serviceManager) {
            const adapter = new JupyterLabAppAdapter({
                ...props,
                mimeExtensionPromises: defaultMimeExtensionPromises,
                extensionPromises: defaultExtensionPromises,
                collaborative,
                serviceManager,
            });
            adapter.ready.then(() => {
                onJupyterLab(adapter);
                if (pluginId && PluginType && onPlugin) {
                    const plugin = adapter.service(pluginId);
                    onPlugin(plugin);
                }
            });
            setAdapter(adapter);
        }
    }, [hostId, ref, serviceManager, theme]);
    return (_jsx(_Fragment, { children: _jsxs(Box, { sx: {
                '& .jp-LabShell': {
                    position: position,
                    height: height,
                    width: width,
                    display: headless ? 'none' : 'inherit',
                },
            }, children: [_jsx(JupyterLabAppCss, { theme: theme }), _jsx("div", { ref: ref, id: hostId })] }) }));
};
JupyterLabApp.defaultProps = {
    devMode: false,
    extensions: [],
    headless: false,
    height: '100vh',
    hostId: 'app-example-id',
    mimeExtensions: [],
    disabledExtensions: [],
    onJupyterLab: (jupyterLabAppAdapter) => { },
    position: 'relative',
    splash: true,
    theme: 'light',
    width: '100%',
};
export default memo(JupyterLabApp);
//# sourceMappingURL=JupyterLabApp.js.map