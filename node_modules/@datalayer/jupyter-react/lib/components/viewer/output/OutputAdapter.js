/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import { OutputArea, OutputAreaModel } from '@jupyterlab/outputarea';
import { RenderMimeRegistry, standardRendererFactories, } from '@jupyterlab/rendermime';
import { rendererFactory as jsonRendererFactory } from '@jupyterlab/json-extension';
import { rendererFactory as javascriptRendererFactory } from '@jupyterlab/javascript-extension';
export class OutputAdapter {
    _renderers;
    _outputArea;
    _rendermime;
    constructor(adaptPlotly, outputs) {
        this._renderers = standardRendererFactories.filter(factory => factory.mimeTypes[0] !== 'text/javascript');
        this._renderers.push(jsonRendererFactory);
        this._renderers.push(javascriptRendererFactory);
        this._rendermime = new RenderMimeRegistry({
            initialFactories: this._renderers,
        });
        const outputAreaModel = new OutputAreaModel({
            trusted: true,
            values: outputs,
        });
        this._outputArea = new OutputArea({
            model: outputAreaModel,
            rendermime: this._rendermime,
        });
        if (adaptPlotly && outputs && outputs[0]) {
            const data = outputs[0].data;
            const isPlotly = data['application/vnd.plotly.v1+json'];
            if (isPlotly) {
                let script = this._outputArea.node.children[0].children[1].children[0].children[1]
                    .innerHTML;
                script = script.replaceAll('\n,', '\n');
                eval(script);
            }
        }
    }
    clearOutput() {
        this._outputArea.model.clear();
    }
    get outputArea() {
        return this._outputArea;
    }
}
export default OutputAdapter;
//# sourceMappingURL=OutputAdapter.js.map