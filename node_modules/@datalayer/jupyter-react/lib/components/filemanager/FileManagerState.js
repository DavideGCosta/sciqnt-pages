/*
 * Copyright (c) 2021-2023 Datalayer, Inc.
 *
 * MIT License
 */
import actionCreatorFactory from 'typescript-fsa';
import { useSelector } from 'react-redux';
import { reducerWithInitialState } from 'typescript-fsa-reducers';
export const fileBrowserInitialState = {
    outputs: 0,
};
/* Selectors */
export const selectFileManager = () => useSelector((state) => {
    if (state.fileBrowser) {
        return state.fileBrowser;
    }
    return { outputs: 0 };
});
/* Actions */
export var FileManagerActionType;
(function (FileManagerActionType) {
    FileManagerActionType["OUTPUTS"] = "fileBrowser/OUTPUTS";
    FileManagerActionType["EXECUTE"] = "fileBrowser/EXECUTE";
})(FileManagerActionType || (FileManagerActionType = {}));
const actionCreator = actionCreatorFactory('jupyterReact');
export const fileBrowserActions = {
    outputs: actionCreator(FileManagerActionType.OUTPUTS),
    execute: actionCreator(FileManagerActionType.EXECUTE),
};
/* Reducers */
export const fileBrowserReducer = reducerWithInitialState(fileBrowserInitialState).case(fileBrowserActions.outputs, (state, success) => {
    return {
        ...state,
        outputs: success,
    };
});
//# sourceMappingURL=FileManagerState.js.map