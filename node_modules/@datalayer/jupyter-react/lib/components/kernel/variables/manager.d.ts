import { VariableInspectionHandler } from './handler';
import { VariableInspectorPanel } from './widget';
import { IVariableInspector, IVariableInspectorManager } from './tokens';
/**
 * A class that manages variable inspector widget instances and offers persistent
 * `IVariableInspector` instance that other plugins can communicate with.
 */
export declare class VariableInspectorManager implements IVariableInspectorManager {
    private _source;
    private _panel?;
    private _handlers;
    hasHandler(id: string): boolean;
    getHandler(id: string): VariableInspectionHandler;
    addHandler(handler: VariableInspectionHandler): void;
    /**
     * The current inspector panel.
     */
    get panel(): VariableInspectorPanel | undefined;
    set panel(panel: VariableInspectorPanel | undefined);
    /**
     * The source of events the inspector panel listens for.
     */
    get source(): IVariableInspector.IInspectable | null;
    set source(source: IVariableInspector.IInspectable | null);
    private _onSourceDisposed;
}
