import { ReactElement } from 'react';
import { IKernelConnection } from '@jupyterlab/services/lib/kernel/kernel';
import { Environment } from '../environment/Environment';
type KernelState = 'connecting' | 'connected-unknown' | 'connected-starting' | 'connected-idle' | 'connected-busy' | 'connected-terminating' | 'connected-restarting' | 'connected-autorestarting' | 'connected-dead' | 'disconnecting' | 'undefined';
/**
 * The valid kernel connection states.
 *
 * #### Notes
 * The status states are:
 * * `connected`: The kernel connection is live.
 * * `connecting`: The kernel connection is not live, but we are attempting
 *   to reconnect to the kernel.
 * * `disconnected`: The kernel connection is permanently down, we will not
 *   try to reconnect.
 *
 * When a kernel connection is `connected`, the kernel status should be
 * valid. When a kernel connection is either `connecting` or `disconnected`,
 * the kernel status will be `unknown` unless the kernel status was `dead`,
 * in which case it stays `dead`.
 *
 * Status = 'unknown' | 'starting' | 'idle' | 'busy' | 'terminating' | 'restarting' | 'autorestarting' | 'dead';
 */
export declare const KERNEL_STATES: Map<KernelState, ReactElement>;
type Props = {
    kernel?: IKernelConnection | null;
    env?: Environment;
};
export declare const KernelIndicator: (props: Props) => import("react/jsx-runtime").JSX.Element;
export default KernelIndicator;
