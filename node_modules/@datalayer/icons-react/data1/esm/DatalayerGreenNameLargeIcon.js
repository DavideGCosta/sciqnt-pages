import * as React from "react";

const sizeMap = {
  "small": 16,
  "medium": 32,
  "large": 64
};

function DatalayerGreenNameLargeIcon({
  title,
  titleId,
  size,
  colored,
  ...props
}, svgRef) {
  return /*#__PURE__*/React.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: colored ? 'none' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('none') ? 'white' : 'currentColor'),
    "aria-hidden": "true",
    viewBox: "0 0 50 50",
    width: size ? typeof size === "string" ? sizeMap[size] : size : "16px",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement("path", {
    fill: colored ? '#2ecc71' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('#2ecc71') ? 'white' : 'currentColor'),
    d: "M0 0h50v7H0zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: colored ? '#1abc9c' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('#1abc9c') ? 'white' : 'currentColor'),
    d: "M0 14h50v7H0zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: colored ? '#16a085' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('#16a085') ? 'white' : 'currentColor'),
    d: "M0 28h50v7H0zm0 0"
  }), /*#__PURE__*/React.createElement("g", {
    strokeWidth: 0.376,
    fontFamily: "sans-serif",
    fontSize: 15.043,
    fontWeight: 400
  }, /*#__PURE__*/React.createElement("text", {
    style: {
      lineHeight: 1.25
    },
    x: -12.576,
    y: 43.816,
    fill: colored ? '#666' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('#666') ? 'white' : 'currentColor'),
    transform: "matrix(1.009 0 0 .99107 12.08 6.915)"
  }, /*#__PURE__*/React.createElement("tspan", {
    x: -12.576,
    y: 43.816,
    style: {
      InkscapeFontSpecification: "BebasNeue"
    },
    fontFamily: "BebasNeue"
  }, "Data")), /*#__PURE__*/React.createElement("text", {
    style: {
      lineHeight: 1.25
    },
    x: 9.857,
    y: 43.816,
    fill: colored ? '#9ea1af' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('#9ea1af') ? 'white' : 'currentColor'),
    transform: "matrix(1.009 0 0 .99107 12.08 6.915)"
  }, /*#__PURE__*/React.createElement("tspan", {
    x: 9.857,
    y: 43.816,
    style: {
      InkscapeFontSpecification: "BebasNeue"
    },
    fontFamily: "BebasNeue"
  }, "layer"))));
}
const ForwardRef = React.forwardRef(DatalayerGreenNameLargeIcon);
export default ForwardRef;