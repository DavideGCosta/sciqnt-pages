import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Octicon, Text } from "@primer/react";
const roundedVals = {
    small: "3px",
    medium: "6px",
    large: "12px",
    full: "100vh",
};
const shadowVals = {
    small: '0 1px 0 rgba(31,35,40,0.04)',
    medium: '0 3px 6px rgba(140,149,159,0.15)',
    large: '0 8px 24px rgba(140,149,159,0.2)',
    extraLarge: '0 12px 28px rgba(140,149,159,0.3)',
};
export const Card = (props) => {
    const { sx, rounded, border, shadow, children, ...otherProps } = props;
    return (_jsx(Box, { sx: {
            ...(sx ? sx : undefined),
            ...(rounded ? typeof rounded === "string" ? {
                borderRadius: roundedVals[rounded]
            } : {
                borderRadius: props.rounded
            } : undefined),
            ...(border ? {
                borderWidth: 1,
                borderStyle: 'solid',
                borderColor: 'border.default'
            } : undefined),
            ...(shadow ? {
                boxShadow: shadowVals[shadow]
            } : {
                boxShadow: shadowVals['small']
            })
        }, ...otherProps, children: children }));
};
Card.Header = (props) => {
    const { title, description, leadingIcon, action } = props;
    return _jsxs(Box, { display: "flex", alignItems: "center", sx: { p: 3 }, children: [leadingIcon && _jsx(Box, { sx: { mr: 3 }, children: _jsx(Octicon, { size: "medium", icon: leadingIcon }) }), _jsxs(Box, { sx: { flexGrow: 1 }, children: [_jsx(Text, { display: "block", children: title }), _jsx(Text, { display: "block", color: "fg.muted", children: description })] }), action && _jsx(Box, { children: action })] });
};
Card.Image = ({ url, image, svg, height }) => {
    return (_jsxs(Box, { display: "block", width: "100%", height: `${height}px`, backgroundImage: `url(${url})`, sx: {
            backgroundSize: "cover",
            backgroundRepeat: "no-repeat",
            backgroundPosition: "center",
            objectFit: "cover"
        }, children: [image && _jsx("img", { src: image, style: { maxHeight: `${height}px` } }), svg && _jsx("img", { src: `data:image/svg+xml;utf8,${svg}`, style: { maxHeight: height } })] }));
};
Card.Content = ({ children }) => {
    return (_jsx(Box, { display: "block", sx: { p: 3 }, children: children }));
};
Card.Actions = ({ children }) => {
    return _jsx(Box, { display: "block", sx: { p: 3 }, children: children });
};
