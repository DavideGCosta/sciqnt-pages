import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useEffect, useState } from 'react';
import { Button, Overlay as PrimerOverlay, Box } from "@primer/react";
const PrimerAddonOverlay = (props) => {
    const { content, buttonRef, confirmButtonRef, headingRef, isOpen, setIsOpen } = props;
    const [direction, _] = useState(props.direction);
    const [top, setTop] = useState(0);
    useEffect(() => {
        setTop(headingRef?.current?.getBoundingClientRect().bottom ?? 0);
    }, [headingRef]);
    const closeOverlay = () => setIsOpen(false);
    return (confirmButtonRef && buttonRef ?
        _jsx(_Fragment, { children: isOpen ?
                direction === 'left' ?
                    _jsx(PrimerOverlay, { initialFocusRef: confirmButtonRef, returnFocusRef: buttonRef, ignoreClickRefs: [buttonRef], onEscape: closeOverlay, onClickOutside: closeOverlay, width: "auto", anchorSide: "inside-right", top: top, children: _jsxs(Box, { sx: {
                                /* We need to remove the padding */
                                height: `calc(100vh - ${top}px - 8px)`,
                                width: '500px',
                                display: 'flex',
                                flexDirection: 'column',
                                alignItems: 'center',
                                padding: '4px'
                            }, children: [_jsx(Box, { sx: {
                                        display: 'flex',
                                        justifyContent: 'right',
                                        width: '100%'
                                    }, children: _jsx(Button, { ref: confirmButtonRef, onClick: closeOverlay, children: "Close me" }) }), content] }) })
                    :
                        _jsx(PrimerOverlay, { initialFocusRef: confirmButtonRef, returnFocusRef: buttonRef, ignoreClickRefs: [buttonRef], onEscape: closeOverlay, onClickOutside: closeOverlay, width: "auto", anchorSide: 'inside-left', right: 0, position: "fixed", top: top, children: _jsxs(Box, { sx: {
                                    /* We need to remove the padding */
                                    height: `calc(100vh - ${top}px - 8px)`,
                                    width: '500px',
                                    display: 'flex',
                                    flexDirection: 'column',
                                    alignItems: 'center',
                                    padding: '4px'
                                }, children: [_jsx(Box, { sx: {
                                            display: 'flex',
                                            justifyContent: 'right',
                                            width: '100%'
                                        }, children: _jsx(Button, { ref: confirmButtonRef, onClick: closeOverlay, children: "Close me" }) }), content] }) })
                : _jsx(_Fragment, {}) })
        :
            _jsx(_Fragment, {}));
};
export const Overlay = (props) => {
    return (_jsx(PrimerAddonOverlay, { ...props }));
};
export default Overlay;
