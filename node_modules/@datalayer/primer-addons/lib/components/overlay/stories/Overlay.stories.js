import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useRef } from "react";
import { Heading, Text, ThemeProvider, BaseStyles, Box, Button, } from "@primer/react";
import { Overlay } from './../Overlay';
const meta = {
    title: 'Components/Overlay',
    component: Overlay,
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
    tags: ['autodocs'],
    parameters: {
        // More on how to position stories at: https://storybook.js.org/docs/react/configure/story-layout
        layout: 'fullscreen',
    },
};
export default meta;
const ThemedOverlay = (props) => {
    const [isOpen, setIsOpen] = useState(false);
    const buttonRef = useRef(null);
    const confirmButtonRef = useRef(null);
    const headingRef = useRef(null);
    return (_jsx(ThemeProvider, { colorMode: props.colorMode, children: _jsx(BaseStyles, { children: _jsx(Box, { p: 3, bg: "canvas.default", children: _jsxs(Box, { children: [_jsx(Box, { sx: { width: '100%', bg: 'darkgray' }, children: _jsx(Heading, { ref: headingRef, children: "Header" }) }), _jsxs(Box, { children: [_jsx(Button, { ref: buttonRef, onClick: () => {
                                        setIsOpen(!isOpen);
                                    }, children: "Open overlay" }), _jsx(Overlay, { ...props, isOpen: isOpen, setIsOpen: setIsOpen, buttonRef: buttonRef, confirmButtonRef: confirmButtonRef, headingRef: props.direction === 'left' ? headingRef : undefined })] })] }) }) }) }));
};
export const OverlayDayLeft = {
    args: {
        direction: "left",
        content: _jsx(Text, { children: "\uD83D\uDC48 Look, left aligned, no heading." }),
    },
    render: (args) => _jsx(ThemedOverlay, { ...args, colorMode: "day" })
};
export const OverlayDayRight = {
    args: {
        direction: "right",
        content: _jsx(Text, { children: "Look, right aligned, on heading \uD83D\uDC49" }),
    },
    render: (args) => _jsx(ThemedOverlay, { ...args, colorMode: "day" })
};
export const OverlayNightLeft = {
    args: {
        direction: "left",
        content: _jsx(Text, { children: "\uD83D\uDC48 Look, left aligned, no heading." }),
    },
    render: (args) => _jsx(ThemedOverlay, { ...args, colorMode: "night" })
};
export const OverlayNightRight = {
    args: {
        direction: "right",
        content: _jsx(Text, { children: "Look, right aligned, on heading \uD83D\uDC49" })
    },
    render: (args) => _jsx(ThemedOverlay, { ...args, colorMode: "night" })
};
